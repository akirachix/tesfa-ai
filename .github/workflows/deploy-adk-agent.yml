# name: Deploy ADK Agent to Cloud Run

# on:
#   push:
#     branches:
#       - main
#       - feature/agent
# jobs:
#   deploy:
#     name: Deploy ADK Agent
#     runs-on: ubuntu-latest
#     env:
#       GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
#       SUPABASE_HOST: ${{ secrets.SUPABASE_HOST }}
#       SUPABASE_DB: ${{ secrets.SUPABASE_DB }}
#       SUPABASE_USER: ${{ secrets.SUPABASE_USER }}
#       SUPABASE_PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}
#       SUPABASE_PORT: ${{ secrets.SUPABASE_PORT }}

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Authenticate to Google Cloud
#         uses: google-github-actions/auth@v2
#         with:
#           credentials_json: '${{ secrets.GCP_SA_KEY }}'

#       - name: Set up Cloud SDK
#         uses: google-github-actions/setup-gcloud@v2

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'

#       - name: Install ADK
#         run: pip install google-adk

#       - name: Create .env file from secrets
#         run: |
#           cd tesfa_agent
#           touch .env
#           echo "GOOGLE_API_KEY=${GOOGLE_API_KEY}" >> .env
#           echo "SUPABASE_HOST=${SUPABASE_HOST}" >> .env
#           echo "SUPABASE_DB=${SUPABASE_DB}" >> .env
#           echo "SUPABASE_USER=${SUPABASE_USER}" >> .env
#           echo "SUPABASE_PASSWORD=${SUPABASE_PASSWORD}" >> .env
#           echo "SUPABASE_PORT=${SUPABASE_PORT}" >> .env
#           ls -la .env

#       - name: Deploy to Cloud Run
#         run: |
#           adk deploy cloud_run \
#             --project=${{ secrets.GCP_PROJECT_ID }} \
#             --service_name=tesfa-agent \
#             --app_name=tesfa-agent \
#             --region=europe-west1 \
#             ./tesfa_agent
            
#       - name: Ensure unauthenticated access is allowed
#         run: |
#           gcloud run services add-iam-policy-binding tesfa-agent \
#           --project=${{ secrets.GCP_PROJECT_ID }} \
#           --region=europe-west1 \
#           --member=allUsers \
#           --role=roles/run.invoker
        
name: Deploy ADK Agent to Cloud Run

on:
  push:
    branches:
      - main
      - feature/agent

jobs:
  deploy:
    name: Deploy ADK Agent
    runs-on: ubuntu-latest
    env:
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      SUPABASE_HOST: ${{ secrets.SUPABASE_HOST }}
      SUPABASE_DB: ${{ secrets.SUPABASE_DB }}
      SUPABASE_USER: ${{ secrets.SUPABASE_USER }}
      SUPABASE_PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}
      SUPABASE_PORT: ${{ secrets.SUPABASE_PORT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install ADK
        run: pip install google-adk

      - name: Create .env file from secrets
        run: |
          mkdir -p tesfa_agent
          cat > tesfa_agent/.env <<EOF
          GOOGLE_API_KEY=${{ env.GOOGLE_API_KEY }}
          SUPABASE_HOST=${{ env.SUPABASE_HOST }}
          SUPABASE_DB=${{ env.SUPABASE_DB }}
          SUPABASE_USER=${{ env.SUPABASE_USER }}
          SUPABASE_PASSWORD=${{ env.SUPABASE_PASSWORD }}
          SUPABASE_PORT=${{ env.SUPABASE_PORT }}
          EOF
          ls -la tesfa_agent/.env

      - name: Clean up legacy agent files and verify structure
        run: |
          # Remove outdated files that interfere with ADK
          rm -f tesfa_agent/agent.py
          rm -f tesfa_agent/root_agent.py
          
          # Ensure __init__.py exists
          if [ ! -f tesfa_agent/__init__.py ]; then
            echo "ERROR: tesfa_agent/__init__.py is missing!"
            exit 1
          fi
          
          # Optional: check that root_agent is likely defined
          if ! grep -q "root_agent\s*=" tesfa_agent/__init__.py; then
            echo "WARNING: 'root_agent =' not found in __init__.py â€” deployment may fail."
          fi

      - name: Deploy to Cloud Run
        run: |
          adk deploy cloud_run \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --service_name=tesfa-agent \
            --app_name=tesfa-agent \
            --region=europe-west1 \
            ./tesfa_agent

      - name: Ensure unauthenticated access is allowed
        run: |
          gcloud run services add-iam-policy-binding tesfa-agent \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --region=europe-west1 \
            --member=allUsers \
            --role=roles/run.invoker